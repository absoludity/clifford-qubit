name: Publish

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    outputs:
      CHANGELOG_EXCERPT: ${{ steps.changelog.outputs.CHANGELOG_EXCERPT }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-publish-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-publish-cargo-

      - name: Verify tag matches Cargo.toml version
        run: |
          CARGO_VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$CARGO_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch: Cargo.toml has $CARGO_VERSION but tag is v$TAG_VERSION"
            exit 1
          fi
          echo "Version verified: $CARGO_VERSION"

      - name: Run tests
        run: cargo test --verbose

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Build release
        run: cargo build --release --verbose

      - name: Generate changelog excerpt
        id: changelog
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          if [ -f CHANGELOG.md ]; then
            # Extract the section for this version from CHANGELOG.md
            CHANGELOG_EXCERPT=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' | tail -n +2)
            if [ -n "$CHANGELOG_EXCERPT" ]; then
              echo "CHANGELOG_EXCERPT<<EOF" >> $GITHUB_OUTPUT
              echo "$CHANGELOG_EXCERPT" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "CHANGELOG_EXCERPT=No changelog entry found for version $VERSION" >> $GITHUB_OUTPUT
            fi
          else
            echo "CHANGELOG_EXCERPT=No CHANGELOG.md found" >> $GITHUB_OUTPUT
          fi

      - name: Dry run publish
        run: cargo publish --dry-run

      - name: Publish to crates.io
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release v${{ steps.version.outputs.VERSION }}
          body: |
            ## Changes in v${{ steps.version.outputs.VERSION }}

            ${{ needs.publish.outputs.CHANGELOG_EXCERPT || format('See [CHANGELOG.md](https://github.com/{0}/blob/main/CHANGELOG.md) for details.', github.repository) }}

            ## Installation

            Add this to your `Cargo.toml`:

            ```toml
            [dependencies]
            clifford-qubit = "${{ steps.version.outputs.VERSION }}"
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
